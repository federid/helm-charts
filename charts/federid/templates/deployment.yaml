apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "federid.labels" . | nindent 4 }}
  name: federid-webhook
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      federid.io/system: "true"
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "federid.labels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
        {{- if .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml .Values.nodeSelector | nindent 8 }}
        {{- end }}
        {{- if .Values.tolerations }}
        tolerations:
          {{- toYaml .Values.tolerations | nindent 8 }}
        {{- end }}
        {{- if .Values.affinity }}
        affinity:
          {{- toYaml .Values.affinity | nindent 8 }}    
        {{- end }}
      containers:
        - args:
            - --log-level=debug
          command:
            - /federid-webhook
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: federid-webhook-config
          # image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}          
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8095
              name: metrics
              protocol: TCP
            - containerPort: 9440
              name: healthz
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}              
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /certs
              name: cert
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: {{ .Values.serviceAccount.name }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: federid-webhook-server-cert
